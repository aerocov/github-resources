name: Build and push docker images, using Azure keyvault

on:
  workflow_call:
    inputs:
      github_env:
        type: string

      docker_image_name:
        type: string
        required: true

      dockerfile:
        type: string
        required: true
        default: Dockerfile
        
      build_args:
        type: string
        required: false

      dockerfile_context:
        type: string
        required: true
        default: '.'
        
      ENV_FILE:
        type: string
        required: false

      tag:
        type: string
        required: true

      keyvault:
        type: string
        required: true

      container_registry_server:
        type: string
        required: true

    secrets:
      azure_login_creds:
        required: true

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ubuntu-latest

    environment:
      name: ${{ inputs.github_env  }}

    steps:
      - uses: actions/checkout@v3

      - name: Azure login
        uses: Azure/login@v1
        with:
          creds: '${{ secrets.azure_login_creds }}'

      - name: Retrieve ACR login secrets
        uses: Azure/get-keyvault-secrets@v1
        with:
          keyvault: ${{ inputs.keyvault }}
          secrets: 'acr-username, acr-password'
        id: keyvault

      - name: Log in to the Azure Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ inputs.container_registry_server }}
          username: ${{ steps.keyvault.outputs.acr-username }}
          password: ${{ steps.keyvault.outputs.acr-password }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: '${{ inputs.container_registry_server }}/${{ inputs.docker_image_name }}'
          tags: |
            ${{ inputs.tag }}
            type=raw,value=latest,enable={{is_default_branch}}

      
      # - name: Build and push Docker image
      #   uses: docker/build-push-action@v3
      #   with:
      #     context: ${{ inputs.dockerfile_context }}
      #     file: ${{ inputs.dockerfile }}
      #     push: true
      #     tags: ${{ steps.meta.outputs.tags }}
      #     labels: ${{ steps.meta.outputs.labels }}
      #     build-args: ${{inputs.build_args}}

      - name: Docker build
        shell: bash
        run: |
          docker build -t ${{ inputs.docker_image_name }}:${{ inputs.tag }} --build-arg=${{inputs.build_args}} .

      - name: Set-up & Scan with Trivy
        shell: bash
        run: |
          set -euo pipefail
          sudo apt-get install wget apt-transport-https gnupg lsb-release
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
          echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee /etc/apt/sources.list.d/trivy.list
          sudo apt-get update
          sudo apt-get install trivy
          trivy image --ignore-unfixed --exit-code 1 --severity CRITICAL ${{ inputs.docker_image_name }}:${{ inputs.tag }}  
          displayName: 'Docker Scan'
          continueOnError: true
      
      - name: ACR Push
        shell: bash
        run: |
          if [[ "${{ inputs.should-push-to-acr }}" == true ]]; then
            - name: Log in to the Azure Container Registry
          uses: docker/login-action@v2
          with:
            registry: ${{ inputs.container_registry_server }}
            username: ${{ steps.keyvault.outputs.acr-username }}
            password: ${{ steps.keyvault.outputs.acr-password }}
          docker push ${{ inputs.image-name }}:${{ inputs.tag }}
          fi
          exit 0
